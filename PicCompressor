<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>PixelSqueeze Pro | Working Image Upload</title>
    <style>
        :root {
            --primary: #E63946;
            --secondary: #3A86FF;
            --dark: #0A0A0A;
            --light: #FFFFFF;
        }
        body {
            background: var(--dark);
            color: var(--light);
            font-family: 'Segoe UI', sans-serif;
            padding: 2rem;
        }
        .upload-area {
            border: 2px dashed var(--secondary);
            border-radius: 8px;
            padding: 3rem;
            text-align: center;
            margin: 2rem auto;
            max-width: 600px;
            cursor: pointer;
        }
        .preview {
            max-width: 100%;
            max-height: 300px;
            margin-top: 1rem;
            display: none;
        }
    </style>
</head>
<body>
    <h1 style="color: var(--primary); text-align: center;">Image Upload Test</h1>
    
    <div class="upload-area" id="uploadArea">
        <i class="fas fa-cloud-upload-alt" style="font-size: 3rem; color: var(--secondary);"></i>
        <h3>Click to Upload Image</h3>
        <p>or drag and drop files here</p>
        <input type="file" id="fileInput" accept="image/*" style="display: none;">
        <img id="imagePreview" class="preview">
    </div>

    <script>
        // DOM Elements
        const uploadArea = document.getElementById('uploadArea');
        const fileInput = document.getElementById('fileInput');
        const imagePreview = document.getElementById('imagePreview');

        // Event Listeners
        uploadArea.addEventListener('click', () => fileInput.click());
        
        fileInput.addEventListener('change', (e) => {
            if (fileInput.files.length) {
                handleImageUpload(fileInput.files[0]);
            }
        });

        // Drag and Drop
        uploadArea.addEventListener('dragover', (e) => {
            e.preventDefault();
            uploadArea.style.borderColor = var(--primary);
            uploadArea.style.backgroundColor = 'rgba(58, 134, 255, 0.1)';
        });

        uploadArea.addEventListener('dragleave', () => {
            uploadArea.style.borderColor = var(--secondary);
            uploadArea.style.backgroundColor = 'transparent';
        });

        uploadArea.addEventListener('drop', (e) => {
            e.preventDefault();
            uploadArea.style.borderColor = var(--secondary);
            uploadArea.style.backgroundColor = 'transparent';
            
            if (e.dataTransfer.files.length) {
                handleImageUpload(e.dataTransfer.files[0]);
            }
        });

        // Handle Image Upload
        function handleImageUpload(file) {
            // Validate file type
            if (!file.type.startsWith('image/')) {
                alert('Please upload an image file (JPG, PNG, etc.)');
                return;
            }

            // Create preview
            const reader = new FileReader();
            reader.onload = (e) => {
                imagePreview.src = e.target.result;
                imagePreview.style.display = 'block';
                
                // Update UI
                uploadArea.innerHTML = `
                    <h3>${file.name}</h3>
                    <p>${formatFileSize(file.size)}</p>
                `;
                uploadArea.appendChild(imagePreview);
            };
            reader.readAsDataURL(file);
        }

        // Format file size
        function formatFileSize(bytes) {
            if (bytes === 0) return '0 Bytes';
            const k = 1024;
            const sizes = ['Bytes', 'KB', 'MB', 'GB'];
            const i = Math.floor(Math.log(bytes) / Math.log(k));
            return parseFloat((bytes / Math.pow(k, i)).toFixed(2) + ' ' + sizes[i];
        }
    </script>
    
    <!-- Font Awesome for icons -->
    <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.4.0/css/all.min.css">
</body>
</html>
